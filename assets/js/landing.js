/**
 * LANDING.JS - Banking Information Systems
 * JavaScript –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫—É—Ä—Å—É "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω—ñ –±–∞–Ω–∫—ñ–≤—Å—å–∫—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó"
 *
 * –§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å:
 * - –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –º–æ–¥—É–ª—ñ–≤ –∑ modules.json
 * - –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç–∞–±–∞–º–∏ (–õ–µ–∫—Ü—ñ—ó/–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ)
 * - –ù–∞–≤—ñ–≥–∞—Ü—ñ—è –¥–æ –ª–µ–∫—Ü—ñ–π —Ç–∞ –ø—Ä–∞–∫—Ç–∏—á–Ω–∏—Ö —Ä–æ–±—ñ—Ç
 * - Performance monitoring
 *
 * –í–µ—Ä—Å—ñ—è: 2.1
 * –î–∞—Ç–∞: 15.09.2025
 */

/* =============================================================================
   MAIN LANDING PAGE CLASS
   ============================================================================= */

class LandingPage {
    constructor() {
        this.modules = [];
        this.courseData = null;
        this.activeTab = 'lectures';
        this.init();
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥–æ–ª–æ–≤–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏
     */
    async init() {
        try {
            console.log('üè† –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥–æ–ª–æ–≤–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏...');
            await this.loadCourseData();
            this.updateStats();
            this.setupTabs();
            this.renderActiveTab();
            console.log('‚úÖ –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ');
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫—É—Ä—Å—É:', error);
            this.showError();
        }
    }

    /**
     * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫—É—Ä—Å—É –∑ modules.json
     */
    async loadCourseData() {
        const response = await fetch('assets/data/modules.json');
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        this.courseData = await response.json();
        this.modules = this.courseData.modules || [];
        console.log('‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –¥–∞–Ω—ñ –∫—É—Ä—Å—É:', this.courseData.courseInfo);
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—É—Ä—Å—É –≤ Hero —Å–µ–∫—Ü—ñ—ó
     */
    updateStats() {
        if (!this.courseData) return;

        const info = this.courseData.courseInfo;
        const totalModulesEl = document.getElementById('total-modules');
        const totalLecturesEl = document.getElementById('total-lectures');
        const totalHoursEl = document.getElementById('total-hours');

        if (totalModulesEl) totalModulesEl.textContent = info.totalModules || 6;
        if (totalLecturesEl) totalLecturesEl.textContent = info.totalLectures || 18;
        if (totalHoursEl) totalHoursEl.textContent = info.estimatedHours || 54;
    }

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π –¥–ª—è —Ç–∞–±—ñ–≤
     */
    setupTabs() {
        const tabBtns = document.querySelectorAll('.tab-btn');
        tabBtns.forEach(btn => {
            btn.addEventListener('click', (e) => {
                const tabName = e.target.dataset.tab;
                this.switchTab(tabName);
            });
        });
    }

    /**
     * –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –º—ñ–∂ —Ç–∞–±–∞–º–∏
     * @param {string} tabName - –ù–∞–∑–≤–∞ —Ç–∞–±—É ('lectures' –∞–±–æ 'practicals')
     */
    switchTab(tabName) {
        // –û–Ω–æ–≤–∏—Ç–∏ –∞–∫—Ç–∏–≤–Ω–∏–π —Ç–∞–±
        this.activeTab = tabName;

        // –û–Ω–æ–≤–∏—Ç–∏ –∫–Ω–æ–ø–∫–∏ —Ç–∞–±—ñ–≤
        document.querySelectorAll('.tab-btn').forEach(btn => {
            btn.classList.toggle('active', btn.dataset.tab === tabName);
        });

        // –û–Ω–æ–≤–∏—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–∞–±—ñ–≤
        document.querySelectorAll('.tab-content').forEach(content => {
            content.classList.toggle('active', content.id === `${tabName}-tab`);
        });

        // –†–µ–Ω–¥–µ—Ä–∏—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–∞–±—É
        this.renderActiveTab();

        console.log(`üîÑ –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –Ω–∞ —Ç–∞–±: ${tabName}`);
    }

    /**
     * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–æ–Ω—Ç–µ–Ω—Ç—É –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ç–∞–±—É
     */
    renderActiveTab() {
        if (this.activeTab === 'lectures') {
            this.renderLectures();
        } else if (this.activeTab === 'practicals') {
            this.renderPracticals();
        }
    }

    /**
     * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤–∫–ª–∞–¥–∫–∏ "–õ–µ–∫—Ü—ñ—ó" - –º–æ–¥—É–ª—ñ –∑ –ª–µ–∫—Ü—ñ—è–º–∏
     */
    renderLectures() {
        const container = document.getElementById('lectures-container');
        if (!container || this.modules.length === 0) {
            this.showError('lectures-container');
            return;
        }

        container.innerHTML = '';

        this.modules.forEach((module, index) => {
            if (module.lectures && module.lectures.length > 0) {
                const moduleCard = this.createLectureModuleCard(module, index + 1);
                container.appendChild(moduleCard);
            }
        });

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –ø—ñ—Å–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É
        this.attachLectureEventListeners();

        console.log(`üìñ –í—ñ–¥—Ä–µ–Ω–¥–µ—Ä–µ–Ω–æ ${this.modules.length} –º–æ–¥—É–ª—ñ–≤ –∑ –ª–µ–∫—Ü—ñ—è–º–∏`);
    }

    /**
     * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤–∫–ª–∞–¥–∫–∏ "–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ" - –≤—Å—ñ –ø—Ä–∞–∫—Ç–∏—á–Ω—ñ —Ä–æ–±–æ—Ç–∏
     */
    renderPracticals() {
        const container = document.getElementById('practicals-container');
        if (!container) {
            this.showError('practicals-container');
            return;
        }

        container.innerHTML = '';

        // –ó–±–∏—Ä–∞—î–º–æ –≤—Å—ñ –ø—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑ —É—Å—ñ—Ö –º–æ–¥—É–ª—ñ–≤
        const allPracticals = [];
        this.modules.forEach(module => {
            // –î–æ–¥–∞—î–º–æ labs
            if (module.labs) {
                module.labs.forEach(lab => {
                    allPracticals.push({
                        ...lab,
                        moduleId: module.id,
                        moduleName: module.title,
                        moduleEmoji: module.emoji,
                        type: 'lab'
                    });
                });
            }

            // –î–æ–¥–∞—î–º–æ practicalTasks
            if (module.practicalTasks) {
                module.practicalTasks.forEach(task => {
                    allPracticals.push({
                        ...task,
                        moduleId: module.id,
                        moduleName: module.title,
                        moduleEmoji: module.emoji,
                        type: 'task'
                    });
                });
            }
        });

        if (allPracticals.length === 0) {
            container.innerHTML = `
                <div class="col-span-full text-center py-12">
                    <div class="text-6xl mb-4">üíª</div>
                    <h3 class="text-xl font-semibold mb-2">–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ —Ä–æ–±–æ—Ç–∏</h3>
                    <p class="text-gray-600">–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –±—É–¥—É—Ç—å –¥–æ–¥–∞–Ω—ñ –Ω–µ–∑–∞–±–∞—Ä–æ–º</p>
                </div>
            `;
            return;
        }

        allPracticals.forEach(practical => {
            const practicalCard = this.createPracticalCard(practical);
            container.appendChild(practicalCard);
        });

        console.log(`üíª –í—ñ–¥—Ä–µ–Ω–¥–µ—Ä–µ–Ω–æ ${allPracticals.length} –ø—Ä–∞–∫—Ç–∏—á–Ω–∏—Ö —Ä–æ–±—ñ—Ç`);
    }

    /**
     * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ä—Ç–æ—á–∫–∏ –º–æ–¥—É–ª—è –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ "–õ–µ–∫—Ü—ñ—ó"
     * @param {Object} module - –û–±'—î–∫—Ç –º–æ–¥—É–ª—è
     * @param {number} position - –ü–æ–∑–∏—Ü—ñ—è –º–æ–¥—É–ª—è (–Ω–æ–º–µ—Ä)
     * @returns {HTMLElement} - DOM –µ–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏
     */
    createLectureModuleCard(module, position) {
        const card = document.createElement('div');
        card.className = 'module-preview';

        const statusBadge = this.getStatusBadge(module.status);

        card.innerHTML = `
            <div class="module-number">${position}</div>
            <div class="module-preview-content">
                <div class="flex justify-between items-start mb-4">
                    <h3 class="module-preview-title">${module.emoji || 'üìö'} ${module.title}</h3>
                    ${statusBadge}
                </div>
                <p class="module-preview-description mb-4">${module.description}</p>
                
                <div class="module-section">
                    <h4 class="module-section-title">üìñ –õ–µ–∫—Ü—ñ—ó:</h4>
                    <div class="module-items">
                        ${this.renderModuleLectures(module.lectures, module.id)}
                    </div>
                </div>
            </div>
        `;

        return card;
    }

    /**
     * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å–ø–∏—Å–∫—É –ª–µ–∫—Ü—ñ–π –º–æ–¥—É–ª—è
     * @param {Array} lectures - –ú–∞—Å–∏–≤ –ª–µ–∫—Ü—ñ–π
     * @param {number} moduleId - ID –º–æ–¥—É–ª—è
     * @returns {string} - HTML —Ä—è–¥–æ–∫ –∑ –ª–µ–∫—Ü—ñ—è–º–∏
     */
    renderModuleLectures(lectures, moduleId) {
        return lectures.map(lecture => `
            <div class="module-item module-lecture" data-module-id="${moduleId}" data-lecture-id="${lecture.id}">
                <span class="module-item-title">${lecture.title}</span>
                ${lecture.duration ? `<span class="module-item-meta">${lecture.duration} —Ö–≤</span>` : ''}
            </div>
        `).join('');
    }

    /**
     * –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—ó —Ä–æ–±–æ—Ç–∏
     * @param {Object} practical - –û–±'—î–∫—Ç –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—ó —Ä–æ–±–æ—Ç–∏
     * @returns {HTMLElement} - DOM –µ–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏
     */
    createPracticalCard(practical) {
        const card = document.createElement('div');
        card.className = 'practical-card';

        const typeLabel = practical.type === 'lab' ? '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞' : '–ü—Ä–∞–∫—Ç–∏—á–Ω–∞';
        const typeIcon = practical.type === 'lab' ? 'üî¨' : 'üíª';

        card.innerHTML = `
            <div class="practical-header">
                <div class="practical-icon">${typeIcon}</div>
                <div class="practical-meta">
                    <span class="practical-type">${typeLabel}</span>
                    <span class="practical-module">${practical.moduleEmoji} ${practical.moduleName}</span>
                </div>
            </div>
            <h3 class="practical-title">${practical.title}</h3>
            <p class="practical-description">${practical.description || '–û–ø–∏—Å –±—É–¥–µ –¥–æ–¥–∞–Ω–æ'}</p>
            ${practical.estimatedTime ? `
                <div class="practical-time">
                    ‚è±Ô∏è –ü—Ä–∏–±–ª–∏–∑–Ω–∏–π —á–∞—Å: ${practical.estimatedTime} —Ö–≤
                </div>
            ` : ''}
        `;

        card.addEventListener('click', () => {
            this.openPractical(practical.moduleId, practical.id);
        });

        return card;
    }

    /**
     * –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π –¥–ª—è –∫–ª—ñ–∫—ñ–≤ –Ω–∞ –ª–µ–∫—Ü—ñ—ó
     */
    attachLectureEventListeners() {
        const lectureItems = document.querySelectorAll('.module-lecture');
        lectureItems.forEach(item => {
            item.addEventListener('click', () => {
                const moduleId = item.dataset.moduleId;
                const lectureId = item.dataset.lectureId;
                this.openLecture(moduleId, lectureId);
            });
        });
    }

    /**
     * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è badge —Å—Ç–∞—Ç—É—Å—É –º–æ–¥—É–ª—è
     * @param {string} status - –°—Ç–∞—Ç—É—Å –º–æ–¥—É–ª—è
     * @returns {string} - HTML —Ä—è–¥–æ–∫ –∑ badge
     */
    getStatusBadge(status) {
        const statusConfig = {
            'active': { text: '–ê–∫—Ç–∏–≤–Ω–∏–π', class: 'badge-success' },
            'completed': { text: '–ó–∞–≤–µ—Ä—à–µ–Ω–æ', class: 'badge-primary' },
            'planned': { text: '–ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ', class: 'badge-outline' },
            'in_progress': { text: '–í –ø—Ä–æ—Ü–µ—Å—ñ', class: 'badge-warning' }
        };

        const config = statusConfig[status] || statusConfig['planned'];
        return `<span class="badge ${config.class}">${config.text}</span>`;
    }

    /**
     * –í—ñ–¥–∫—Ä–∏—Ç—Ç—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –º–æ–¥—É–ª—è
     * @param {number} moduleId - ID –º–æ–¥—É–ª—è
     */
    openModule(moduleId) {
        console.log(`üîó –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥—É–ª—è ${moduleId}`);
        // TODO: –†–µ–∞–ª—å–Ω–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è
        // window.location.href = `modules/module${moduleId}/index.html`;
        alert(`üìö –ú–æ–¥—É–ª—å ${moduleId} –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π –ø—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –º–æ–¥—É–ª—ñ–≤`);
    }

    /**
     * –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –ª–µ–∫—Ü—ñ—ó
     * @param {number} moduleId - ID –º–æ–¥—É–ª—è
     * @param {number} lectureId - ID –ª–µ–∫—Ü—ñ—ó
     */
    openLecture(moduleId, lectureId) {
        console.log(`üìñ –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –ª–µ–∫—Ü—ñ—ó ${moduleId}.${lectureId}`);
        // TODO: –†–µ–∞–ª—å–Ω–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è
        // window.location.href = `modules/module${moduleId}/lectures/lecture${lectureId}/index.html`;
        alert(`üìñ –õ–µ–∫—Ü—ñ—è ${lectureId} –º–æ–¥—É–ª—è ${moduleId} –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏`);
    }

    /**
     * –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—ó —Ä–æ–±–æ—Ç–∏
     * @param {number} moduleId - ID –º–æ–¥—É–ª—è
     * @param {number} practicalId - ID –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—ó —Ä–æ–±–æ—Ç–∏
     */
    openPractical(moduleId, practicalId) {
        console.log(`üíª –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—ó ${moduleId}.${practicalId}`);
        // TODO: –†–µ–∞–ª—å–Ω–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è
        // window.location.href = `modules/module${moduleId}/practices/practice${practicalId}/index.html`;
        alert(`üíª –ü—Ä–∞–∫—Ç–∏—á–Ω–∞ ${practicalId} –º–æ–¥—É–ª—è ${moduleId} –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏`);
    }

    /**
     * –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
     * @param {string} containerId - ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –ø–æ–º–∏–ª–∫–∏
     */
    showError(containerId = 'lectures-container') {
        const container = document.getElementById(containerId);
        if (container) {
            container.innerHTML = `
                <div class="col-span-full">
                    <div class="alert alert-error">
                        <div class="alert-title">‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</div>
                        –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –∫—É—Ä—Å—É.
                        <br><small>–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ñ–∞–π–ª—É assets/data/modules.json</small>
                    </div>
                </div>
            `;
        }
    }
}

/* =============================================================================
   INITIALIZATION AND EVENT HANDLERS
   ============================================================================= */

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
document.addEventListener('DOMContentLoaded', () => {
    console.log('üöÄ DOM –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ, —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è LandingPage...');
    new LandingPage();
});

// Smooth scroll –¥–ª—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –ø–æ—Å–∏–ª–∞–Ω—å
document.addEventListener('click', (e) => {
    const link = e.target.closest('a[href^="#"]');
    if (link) {
        e.preventDefault();
        const targetId = link.getAttribute('href').substring(1);
        const targetElement = document.getElementById(targetId);
        if (targetElement) {
            targetElement.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
            });
        }
    }
});

// Performance monitoring
window.addEventListener('load', () => {
    if (window.performance && window.performance.timing) {
        const navigation = window.performance.timing;
        const loadTime = navigation.loadEventEnd - navigation.navigationStart;

        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞ –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å —á–∞—Å—É
        if (loadTime > 0 && loadTime < 30000) {
            console.log(`‚ö° –ß–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏: ${loadTime}ms`);
        } else {
            console.log(`‚ö° –°—Ç–æ—Ä—ñ–Ω–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ`);
        }
    }
});

/* =============================================================================
   EXPORT FOR MODULE USAGE (if needed)
   ============================================================================= */

// –ï–∫—Å–ø–æ—Ä—Ç –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—è—Ö (optional)
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { LandingPage };
}