// Main JavaScript –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫—É—Ä—Å—É
// –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω—ñ –±–∞–Ω–∫—ñ–≤—Å—å–∫—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó - –ö—ñ–±–µ—Ä–±–µ–∑–ø–µ–∫–∞

document.addEventListener('DOMContentLoaded', function() {
    console.log('üè¶ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫—É—Ä—Å—É "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω—ñ –±–∞–Ω–∫—ñ–≤—Å—å–∫—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó"');

    initializeModules();
    initializeNavigation();
    initializeAnimations();

    console.log('‚úÖ –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –≥–æ—Ç–æ–≤–∞');
});

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—ñ–≤
function initializeModules() {
    const container = document.getElementById('modules-container');

    if (!container) {
        console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –º–æ–¥—É–ª—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        return;
    }

    if (!MODULES_DATA) {
        console.error('‚ùå –î–∞–Ω—ñ –º–æ–¥—É–ª—ñ–≤ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ');
        container.innerHTML = '<div class="loading">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥—É–ª—ñ–≤...</div>';
        return;
    }

    // –û—á–∏—â–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    container.innerHTML = '';

    // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–∞—Ä—Ç–∫–∏ –º–æ–¥—É–ª—ñ–≤
    MODULES_DATA.forEach(module => {
        const moduleCard = createModuleCard(module);
        container.appendChild(moduleCard);
    });

    console.log(`üìö –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${MODULES_DATA.length} –º–æ–¥—É–ª—ñ–≤`);
}

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏ –º–æ–¥—É–ª—è
function createModuleCard(module) {
    const card = document.createElement('div');
    card.className = 'module-card fade-in';
    card.dataset.moduleId = module.id;

    // –í–∏–∑–Ω–∞—á–∞—î–º–æ —á–∏ —Ü–µ –º–æ–¥—É–ª—å –∑ –∫—ñ–±–µ—Ä–±–µ–∑–ø–µ–∫–∏
    const isSecurityModule = module.id === 4 || module.id === 6;

    card.innerHTML = `
        <div class="module-header">
            <div class="module-number">${module.number}</div>
            <div class="module-icon">${module.icon}</div>
            <h3 class="module-title">${module.title}</h3>
        </div>
        
        <p class="module-description">${module.description}</p>
        
        <div class="module-stats">
            <span class="stat-small">üìö ${module.lectures?.length || 0} –ª–µ–∫—Ü—ñ–π</span>
            <span class="stat-small">üß™ ${module.labs?.length || 0} –ª–∞–±</span>
            <span class="stat-small">‚öôÔ∏è ${module.practices?.length || 0} –ø—Ä–∞–∫—Ç–∏–∫</span>
            <span class="stat-small">‚è±Ô∏è ${module.hours.lectures + module.hours.practice} –≥–æ–¥</span>
        </div>

        <div class="lectures-list">
            ${createLecturesList(module.lectures)}
        </div>

        ${module.labs?.length > 0 ? `
            <div class="labs-list" style="display: none;">
                <h4>üß™ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ñ —Ä–æ–±–æ—Ç–∏:</h4>
                ${createLabsList(module.labs)}
            </div>
        ` : ''}

        ${module.practices?.length > 0 ? `
            <div class="practices-list" style="display: none;">
                <h4>‚öôÔ∏è –ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑–∞–Ω—è—Ç—Ç—è:</h4>
                ${createPracticesList(module.practices)}
            </div>
        ` : ''}

        ${isSecurityModule ? createSecurityFocus(module) : ''}
    `;

    return card;
}

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∏—Ö (–≥–æ—Ç–æ–≤–æ –¥–ª—è –±–µ–π–¥–∂—ñ–≤)
function createLabsList(labs) {
    if (!labs || labs.length === 0) {
        return '<p class="no-labs">–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ñ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ...</p>';
    }

    return labs.map(lab => `
        <a href="${lab.file}" class="lab-item" data-lab-file="${lab.file}">
            <div class="lab-title">
                ${lab.title}
                ${lab.badge ? createBadge(lab.badge) : ''}
            </div>
            <div class="lab-duration">${lab.duration}</div>
        </a>
    `).join('');
}

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –ø—Ä–∞–∫—Ç–∏—á–Ω–∏—Ö (–≥–æ—Ç–æ–≤–æ –¥–ª—è –±–µ–π–¥–∂—ñ–≤)
function createPracticesList(practices) {
    if (!practices || practices.length === 0) {
        return '<p class="no-practices">–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ...</p>';
    }

    return practices.map(practice => `
        <a href="${practice.file}" class="practice-item" data-practice-file="${practice.file}">
            <div class="practice-title">
                ${practice.title}
                ${practice.badge ? createBadge(practice.badge) : ''}
            </div>
            <div class="practice-duration">${practice.duration}</div>
        </a>
    `).join('');
}

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –ª–µ–∫—Ü—ñ–π
function createLecturesList(lectures) {
    if (!lectures || lectures.length === 0) {
        return '<p class="no-lectures">–õ–µ–∫—Ü—ñ—ó –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ...</p>';
    }

    return lectures.map(lecture => `
        <a href="${lecture.file}" class="lecture-item" data-lecture-file="${lecture.file}">
            <div class="lecture-title">
                ${lecture.title}
                ${lecture.badge ? createBadge(lecture.badge) : ''}
            </div>
            <div class="lecture-duration">${lecture.duration}</div>
            ${lecture.subtopics ? `
                <div class="lecture-subtopics">
                    ${lecture.subtopics.slice(0, 2).join(' ‚Ä¢ ')}${lecture.subtopics.length > 2 ? ' ‚Ä¢ ...' : ''}
                </div>
            ` : ''}
        </a>
    `).join('');
}

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–µ–π–¥–∂–∞ (–≥–æ—Ç–æ–≤–æ –¥–ª—è –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è)
function createBadge(badgeType) {
    // –ü–æ–∫–∏ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π —Ä—è–¥–æ–∫, –∞–ª–µ —Ñ—É–Ω–∫—Ü—ñ—è –≥–æ—Ç–æ–≤–∞
    return '';

    // –î–ª—è –º–∞–π–±—É—Ç–Ω—å–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
    /*
    const badgeMap = {
        'new': '<span class="badge new">–ù–æ–≤–µ</span>',
        'updated': '<span class="badge updated">–û–Ω–æ–≤–ª–µ–Ω–æ</span>',
        'important': '<span class="badge important">–í–∞–∂–ª–∏–≤–æ</span>',
        'beta': '<span class="badge beta">–ë–µ—Ç–∞</span>',
        'security': '<span class="badge security">–ë–µ–∑–ø–µ–∫–∞</span>'
    };

    return badgeMap[badgeType] || '';
    */
}

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–µ–∫—Ü—ñ—ó —Ñ–æ–∫—É—Å—É –Ω–∞ –±–µ–∑–ø–µ—Ü—ñ
function createSecurityFocus(module) {
    const focusMessages = {
        4: "üîê –û—Å–Ω–æ–≤–Ω–∏–π –º–æ–¥—É–ª—å –∑ –∫—ñ–±–µ—Ä–±–µ–∑–ø–µ–∫–∏! –í–∫–ª—é—á–∞—î –ø—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑–∞–Ω—è—Ç—Ç—è –∑ malware analysis, SIEM —Å–∏—Å—Ç–µ–º–∞–º–∏ —Ç–∞ penetration testing –±–∞–Ω–∫—ñ–≤—Å—å–∫–∏—Ö –¥–æ–¥–∞—Ç–∫—ñ–≤.",
        6: "üõ°Ô∏è –ö—Ä–∏—Ç–∏—á–Ω–æ –≤–∞–∂–ª–∏–≤–∏–π –º–æ–¥—É–ª—å! –í–∏–≤—á–µ–Ω–Ω—è —Ä–µ–∞–ª—å–Ω–∏—Ö –∫—ñ–±–µ—Ä—ñ–Ω—Ü–∏–¥–µ–Ω—Ç—ñ–≤ (Bangladesh Bank, Equifax), AI-powered –∞—Ç–∞–∫ —Ç–∞ quantum-safe –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ—ñ—ó."
    };

    return `
        <div class="security-focus">
            <h4>üéØ –§–æ–∫—É—Å –Ω–∞ –∫—ñ–±–µ—Ä–±–µ–∑–ø–µ—Ü—ñ</h4>
            <p>${focusMessages[module.id] || '–ú–æ–¥—É–ª—å –≤–∫–ª—é—á–∞—î –≤–∞–∂–ª–∏–≤—ñ –∞—Å–ø–µ–∫—Ç–∏ –∫—ñ–±–µ—Ä–±–µ–∑–ø–µ–∫–∏ –¥–ª—è –±–∞–Ω–∫—ñ–≤.'}</p>
        </div>
    `;
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
function initializeNavigation() {
    const navButtons = document.querySelectorAll('.nav-btn');

    navButtons.forEach(button => {
        button.addEventListener('click', function() {
            // –ó–Ω—ñ–º–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–ª–∞—Å –∑ —É—Å—ñ—Ö –∫–Ω–æ–ø–æ–∫
            navButtons.forEach(btn => btn.classList.remove('active'));

            // –î–æ–¥–∞—î–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π –∫–ª–∞—Å –¥–æ –ø–æ—Ç–æ—á–Ω–æ—ó –∫–Ω–æ–ø–∫–∏
            this.classList.add('active');

            // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –∫–æ–Ω—Ç–µ–Ω—Ç
            const filter = this.dataset.filter;
            filterContent(filter);
        });
    });
}

// –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –∫–æ–Ω—Ç–µ–Ω—Ç—É
function filterContent(filter) {
    const moduleCards = document.querySelectorAll('.module-card');

    moduleCards.forEach(card => {
        const moduleId = parseInt(card.dataset.moduleId);
        let shouldShow = true;

        // –°–ø–æ—á–∞—Ç–∫—É –ø—Ä–∏—Ö–æ–≤—É—î–º–æ –≤—Å—ñ —Å–ø–∏—Å–∫–∏
        const lecturesList = card.querySelector('.lectures-list');
        const labsList = card.querySelector('.labs-list');
        const practicesList = card.querySelector('.practices-list');

        // –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –≤—Å—ñ —Å–ø–∏—Å–∫–∏
        if (lecturesList) lecturesList.style.display = 'none';
        if (labsList) labsList.style.display = 'none';
        if (practicesList) practicesList.style.display = 'none';

        switch(filter) {
            case 'lectures':
                // –ü–æ–∫–∞–∑—É—î–º–æ –≤—Å—ñ –º–æ–¥—É–ª—ñ –¥–ª—è –ª–µ–∫—Ü—ñ–π
                shouldShow = true;
                if (lecturesList) lecturesList.style.display = 'block';
                highlightLectures(card);
                break;
            case 'labs':
                // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥—É–ª—ñ –∑ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∏–º–∏
                const hasLabs = MODULES_DATA.find(m => m.id === moduleId)?.labs?.length > 0;
                shouldShow = hasLabs;
                if (shouldShow) {
                    if (labsList) labsList.style.display = 'block';
                    highlightLabs(card);
                }
                break;
            case 'practices':
                // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥—É–ª—ñ –∑ –ø—Ä–∞–∫—Ç–∏—á–Ω–∏–º–∏
                const hasPractices = MODULES_DATA.find(m => m.id === moduleId)?.practices?.length > 0;
                shouldShow = hasPractices;
                if (shouldShow) {
                    if (practicesList) practicesList.style.display = 'block';
                    highlightPractices(card);
                }
                break;
            case 'all':
            default:
                shouldShow = true;
                // –ü–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –ª–µ–∫—Ü—ñ—ó –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
                if (lecturesList) lecturesList.style.display = 'block';
                clearHighlights(card);
                break;
        }

        if (shouldShow) {
            card.style.display = 'block';
            setTimeout(() => card.classList.add('visible'), 100);
        } else {
            card.classList.remove('visible');
            setTimeout(() => card.style.display = 'none', 300);
        }
    });

    console.log(`üîç –ó–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ —Ñ—ñ–ª—å—Ç—Ä: ${filter}`);
}

// –ü—ñ–¥—Å–≤—ñ—Ç–∫–∞ –ª–µ–∫—Ü—ñ–π
function highlightLectures(card) {
    const lectures = card.querySelectorAll('.lecture-item');
    lectures.forEach(lecture => {
        lecture.style.background = 'rgba(30, 60, 114, 0.1)';
        lecture.style.borderLeft = '3px solid #3b7dd8';
    });
}

// –ü—ñ–¥—Å–≤—ñ—Ç–∫–∞ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∏—Ö
function highlightLabs(card) {
    card.style.border = '2px solid #28a745';
    card.querySelector('.module-header').style.background = 'rgba(40, 167, 69, 0.1)';
}

// –ü—ñ–¥—Å–≤—ñ—Ç–∫–∞ –ø—Ä–∞–∫—Ç–∏—á–Ω–∏—Ö
function highlightPractices(card) {
    card.style.border = '2px solid #dc3545';
    card.querySelector('.module-header').style.background = 'rgba(220, 53, 69, 0.1)';
}

// –û—á–∏—â–µ–Ω–Ω—è –ø—ñ–¥—Å–≤—ñ—Ç–∫–∏
function clearHighlights(card) {
    card.style.border = '';
    const header = card.querySelector('.module-header');
    if (header) header.style.background = '';

    const lectures = card.querySelectorAll('.lecture-item');
    lectures.forEach(lecture => {
        lecture.style.background = '';
        lecture.style.borderLeft = '';
    });
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∞–Ω—ñ–º–∞—Ü—ñ–π
function initializeAnimations() {
    // Intersection Observer –¥–ª—è fade-in –∞–Ω—ñ–º–∞—Ü—ñ–π
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('visible');
            }
        });
    }, {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    });

    // –°–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—î–º–æ –∑–∞ –≤—Å—ñ–º–∞ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∑ –∫–ª–∞—Å–æ–º fade-in
    document.querySelectorAll('.fade-in').forEach(el => {
        observer.observe(el);
    });
}

// –û–±—Ä–æ–±–∫–∞ –∫–ª—ñ–∫—ñ–≤ –ø–æ –ª–µ–∫—Ü—ñ—è—Ö
document.addEventListener('click', function(e) {
    const lectureLink = e.target.closest('.lecture-item');

    if (lectureLink && lectureLink.href) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ñ–∞–π–ª —ñ—Å–Ω—É—î
        const fileName = lectureLink.dataset.lectureFile;

        console.log(`üéØ –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –ª–µ–∫—Ü—ñ—ó: ${fileName}`);

        // –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—É
        if (fileName.includes('lecture1_2_core_banking')) {
            console.log('‚úÖ –õ–µ–∫—Ü—ñ—è 1.2 –¥–æ—Å—Ç—É–ø–Ω–∞');
        } else {
            console.log('‚ö†Ô∏è –õ–µ–∫—Ü—ñ—è –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ');
            e.preventDefault();
            showDevelopmentNotice(lectureLink.querySelector('.lecture-title').textContent);
        }
    }
});

// –ü–æ–∫–∞–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —Ä–æ–∑—Ä–æ–±–∫—É
function showDevelopmentNotice(lectureTitle) {
    const notice = document.createElement('div');
    notice.className = 'dev-notice';
    notice.innerHTML = `
        <div class="dev-notice-content">
            <h3>üöß –õ–µ–∫—Ü—ñ—è –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ</h3>
            <p><strong>${lectureTitle}</strong></p>
            <p>–¶—è –ª–µ–∫—Ü—ñ—è –Ω–∞—Ä–∞–∑—ñ —Ä–æ–∑—Ä–æ–±–ª—è—î—Ç—å—Å—è. –°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º–∏!</p>
            <button onclick="this.closest('.dev-notice').remove()">–ó—Ä–æ–∑—É–º—ñ–ª–æ</button>
        </div>
    `;

    notice.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.8);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10000;
    `;

    notice.querySelector('.dev-notice-content').style.cssText = `
        background: white;
        padding: 30px;
        border-radius: 15px;
        text-align: center;
        max-width: 400px;
        box-shadow: 0 25px 50px rgba(0,0,0,0.3);
    `;

    notice.querySelector('button').style.cssText = `
        background: #1e3c72;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        cursor: pointer;
        margin-top: 15px;
        font-size: 1rem;
    `;

    document.body.appendChild(notice);

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => notice.remove(), 5000);
}

// –§—É–Ω–∫—Ü—ñ—è –ø–æ–∫–∞–∑—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—É—Ä—Å—É (–≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∑ HTML)
function showCourseStats() {
    const stats = window.COURSE_STATS || {};

    const modal = document.createElement('div');
    modal.className = 'stats-modal';
    modal.innerHTML = `
        <div class="stats-modal-content">
            <h2>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—É—Ä—Å—É</h2>
            <div class="stats-grid">
                <div class="stat-item-modal">
                    <div class="stat-value">${stats.modules || 6}</div>
                    <div class="stat-label">–ú–æ–¥—É–ª—ñ–≤</div>
                </div>
                <div class="stat-item-modal">
                    <div class="stat-value">${stats.lectures || 17}</div>
                    <div class="stat-label">–õ–µ–∫—Ü—ñ–π</div>
                </div>
                <div class="stat-item-modal">
                    <div class="stat-value">${stats.labs || 14}</div>
                    <div class="stat-label">–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∏—Ö</div>
                </div>
                <div class="stat-item-modal">
                    <div class="stat-value">${stats.practices || 16}</div>
                    <div class="stat-label">–ü—Ä–∞–∫—Ç–∏—á–Ω–∏—Ö</div>
                </div>
            </div>
            
            <div class="hours-info">
                <h3>‚è∞ –†–æ–∑–ø–æ–¥—ñ–ª —á–∞—Å—É:</h3>
                <p><strong>–õ–µ–∫—Ü—ñ—ó:</strong> ${stats.lectureHours || 36} –≥–æ–¥–∏–Ω</p>
                <p><strong>–ü—Ä–∞–∫—Ç–∏–∫–∞:</strong> ${stats.practiceHours || 192} –≥–æ–¥–∏–Ω–∏</p>
                <p><strong>–í—Å—å–æ–≥–æ:</strong> ${stats.totalHours || 228} –≥–æ–¥–∏–Ω</p>
                <p><strong>–°–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è:</strong> –ª–µ–∫—Ü—ñ—ó:–ø—Ä–∞–∫—Ç–∏–∫–∞ = 1:5.3</p>
            </div>
            
            <div class="security-focus-stats">
                <h3>üîê –§–æ–∫—É—Å –Ω–∞ –∫—ñ–±–µ—Ä–±–µ–∑–ø–µ—Ü—ñ:</h3>
                <ul>
                    <li>–ú–æ–¥—É–ª—å 4: "–ë–µ–∑–ø–µ–∫–∞ –±–∞–Ω–∫—ñ–≤—Å—å–∫–∏—Ö —Å–∏—Å—Ç–µ–º" (–æ—Å–Ω–æ–≤–Ω–∏–π)</li>
                    <li>–ú–æ–¥—É–ª—å 6: "–ö—ñ–±–µ—Ä–∑–∞–≥—Ä–æ–∑–∏ –≤ –±–∞–Ω–∫—ñ–Ω–≥—É" (–∫—Ä–∏—Ç–∏—á–Ω–∏–π)</li>
                    <li>50%+ –∫—É—Ä—Å—É –ø—Ä–∏—Å–≤—è—á–µ–Ω–æ –∫—ñ–±–µ—Ä–±–µ–∑–ø–µ—Ü—ñ</li>
                </ul>
            </div>
            
            <button onclick="this.closest('.stats-modal').remove()">–ó–∞–∫—Ä–∏—Ç–∏</button>
        </div>
    `;

    // –°—Ç–∏–ª—ñ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.8);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 10000;
        padding: 20px;
    `;

    const content = modal.querySelector('.stats-modal-content');
    content.style.cssText = `
        background: white;
        padding: 40px;
        border-radius: 20px;
        max-width: 600px;
        max-height: 80vh;
        overflow-y: auto;
        box-shadow: 0 25px 50px rgba(0,0,0,0.3);
    `;

    // –î–æ–¥–∞—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è —Å—ñ—Ç–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const statsGrid = modal.querySelector('.stats-grid');
    if (statsGrid) {
        statsGrid.style.cssText = `
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 20px;
            margin: 20px 0;
        `;
    }

    modal.querySelectorAll('.stat-item-modal').forEach(item => {
        item.style.cssText = `
            text-align: center;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 10px;
        `;
    });

    modal.querySelectorAll('.stat-value').forEach(value => {
        value.style.cssText = `
            font-size: 2rem;
            font-weight: bold;
            color: #1e3c72;
            margin-bottom: 5px;
        `;
    });

    modal.querySelector('button').style.cssText = `
        background: #1e3c72;
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 8px;
        cursor: pointer;
        margin-top: 20px;
        font-size: 1rem;
        display: block;
        margin-left: auto;
        margin-right: auto;
    `;

    document.body.appendChild(modal);
}

// –ï–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø—É
window.showCourseStats = showCourseStats;

// –õ–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
console.log('üéì –ö—É—Ä—Å "–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω—ñ –±–∞–Ω–∫—ñ–≤—Å—å–∫—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó" –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è');
