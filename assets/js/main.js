// Main JavaScript - –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω—ñ –±–∞–Ω–∫—ñ–≤—Å—å–∫—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.addEventListener('DOMContentLoaded', () => {
    renderModules();
    initFilters();
    addAnimations();
});

// –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –º–æ–¥—É–ª—ñ–≤
function renderModules(filter = 'all') {
    const container = document.getElementById('modules-container');
    container.innerHTML = '';

    MODULES_DATA.forEach((module, index) => {
        const moduleCard = createModuleCard(module, filter);
        if (moduleCard) {
            container.appendChild(moduleCard);
            // –î–æ–¥–∞–≤–∞–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é
            setTimeout(() => {
                moduleCard.classList.add('show');
            }, index * 100);
        }
    });
}

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏ –º–æ–¥—É–ª—è
function createModuleCard(module, filter) {
    const card = document.createElement('div');
    card.className = 'module-card';
    card.dataset.moduleId = module.id;

    let hasVisibleContent = false;
    let lecturesHTML = '';
    let labsHTML = '';
    let practicesHTML = '';

    // –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–æ–Ω—Ç–µ–Ω—Ç—É
    if (filter === 'all' || filter === 'lectures') {
        if (module.lectures && module.lectures.length > 0) {
            hasVisibleContent = true;
            lecturesHTML = `
                <div class="content-section">
                    <h3 class="content-header">
                        <span>üéì</span> –õ–µ–∫—Ü—ñ—ó (${module.lectures.length})
                    </h3>
                    <ul class="content-list">
                        ${module.lectures.map(lecture => createContentItem(lecture, 'lecture', module.number)).join('')}
                    </ul>
                </div>
            `;
        }
    }

    if (filter === 'all' || filter === 'labs') {
        if (module.labs && module.labs.length > 0) {
            hasVisibleContent = true;
            labsHTML = `
                <div class="content-section">
                    <h3 class="content-header">
                        <span>üî¨</span> –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ñ —Ä–æ–±–æ—Ç–∏ (${module.labs.length})
                    </h3>
                    <ul class="content-list">
                        ${module.labs.map(lab => createContentItem(lab, 'lab', module.number)).join('')}
                    </ul>
                </div>
            `;
        }
    }

    if (filter === 'all' || filter === 'practices') {
        if (module.practices && module.practices.length > 0) {
            hasVisibleContent = true;
            practicesHTML = `
                <div class="content-section">
                    <h3 class="content-header">
                        <span>üí°</span> –ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –∑–∞–Ω—è—Ç—Ç—è (${module.practices.length})
                    </h3>
                    <ul class="content-list">
                        ${module.practices.map(practice => createContentItem(practice, 'practice', module.number)).join('')}
                    </ul>
                </div>
            `;
        }
    }

    // –Ø–∫—â–æ –Ω–µ–º–∞—î –≤–∏–¥–∏–º–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞, –Ω–µ –ø–æ–∫–∞–∑—É—î–º–æ –∫–∞—Ä—Ç–∫—É
    if (!hasVisibleContent && filter !== 'all') {
        return null;
    }

    card.innerHTML = `
        <div class="module-header">
            <div class="module-icon">${module.icon}</div>
            <div class="module-info">
                <h2 class="module-title">–ú–æ–¥—É–ª—å ${module.number}. ${module.title}</h2>
                <div class="module-hours">
                    üìö ${module.hours.lectures} –≥–æ–¥. –ª–µ–∫—Ü—ñ–π | üíª ${module.hours.practice} –≥–æ–¥. –ø—Ä–∞–∫—Ç–∏–∫–∏
                </div>
            </div>
        </div>
        <p class="module-description">${module.description}</p>
        ${lecturesHTML}
        ${labsHTML}
        ${practicesHTML}
    `;

    return card;
}

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –∫–æ–Ω—Ç–µ–Ω—Ç—É
function createContentItem(item, type, moduleNumber) {
    const iconMap = {
        'lecture': 'üìñ',
        'lab': 'üß™',
        'practice': '‚öôÔ∏è'
    };

    const pathMap = {
        'lecture': 'lectures/',
        'lab': 'labs/',
        'practice': 'practices/'
    };

    const badge = item.badge ? `<span class="badge ${item.badge}">${item.badge}</span>` : '';

    return `
        <li class="content-item" onclick="openContent('${pathMap[type]}${item.file}', '${item.title}')">
            <div class="content-item-title">
                <span class="content-item-icon">${iconMap[type]}</span>
                <span>${item.title}</span>
            </div>
            <div style="display: flex; align-items: center; gap: 10px;">
                <span class="content-item-duration">${item.duration}</span>
                ${badge}
            </div>
        </li>
    `;
}

// –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –∫–æ–Ω—Ç–µ–Ω—Ç—É
function openContent(filePath, title) {
    // –¢—É—Ç –º–æ–∂–Ω–∞ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –≤ –º–æ–¥–∞–ª—å–Ω–æ–º—É –≤—ñ–∫–Ω—ñ –∞–±–æ –ø–µ—Ä–µ—Ö—ñ–¥ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
    console.log(`–í—ñ–¥–∫—Ä–∏—Ç—Ç—è: ${filePath} - ${title}`);

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ñ–∞–π–ª —ñ—Å–Ω—É—î (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó - –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –∞–ª–µ—Ä—Ç)
    alert(`–§–∞–π–ª "${title}" –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π –ø—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è:\n${filePath}\n\n–î–æ–¥–∞–π—Ç–µ HTML —Ñ–∞–π–ª–∏ –ª–µ–∫—Ü—ñ–π, –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∏—Ö —Ç–∞ –ø—Ä–∞–∫—Ç–∏—á–Ω–∏—Ö —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –ø–∞–ø–∫–∏.`);

    // –í —Ä–µ–∞–ª—å–Ω–æ–º—É –ø—Ä–æ–µ–∫—Ç—ñ:
    // window.open(filePath, '_blank');
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
function initFilters() {
    const filterButtons = document.querySelectorAll('.nav-btn[data-filter]');

    filterButtons.forEach(button => {
        button.addEventListener('click', (e) => {
            // –í–∏–¥–∞–ª–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–ª–∞—Å—É –∑ —É—Å—ñ—Ö –∫–Ω–æ–ø–æ–∫
            filterButtons.forEach(btn => btn.classList.remove('active'));

            // –î–æ–¥–∞–≤–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–ª–∞—Å—É –ø–æ—Ç–æ—á–Ω—ñ–π –∫–Ω–æ–ø—Ü—ñ
            button.classList.add('active');

            // –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–∏–ø—É —Ñ—ñ–ª—å—Ç—Ä–∞
            const filterType = button.getAttribute('data-filter');

            // –ü–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –º–æ–¥—É–ª—ñ–≤ –∑ —Ñ—ñ–ª—å—Ç—Ä–æ–º
            renderModules(filterType);
        });
    });
}

// –î–æ–¥–∞–≤–∞–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ–π
function addAnimations() {
    // –ê–Ω—ñ–º–∞—Ü—ñ—è –¥–ª—è –∫–∞—Ä—Ç–æ–∫ –ø—Ä–∏ —Å–∫—Ä–æ–ª—ñ
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.animation = 'fadeIn 0.5s ease forwards';
            }
        });
    }, observerOptions);

    // –°–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏
    document.querySelectorAll('.module-card').forEach(card => {
        observer.observe(card);
    });
}

// –£—Ç–∏–ª—ñ—Ç–∏
const Utils = {
    // –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É —Ñ—ñ–ª—å—Ç—Ä–∞ –≤ localStorage
    saveFilterState(filter) {
        localStorage.setItem('banking_it_filter', filter);
    },

    // –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É —Ñ—ñ–ª—å—Ç—Ä–∞
    restoreFilterState() {
        return localStorage.getItem('banking_it_filter') || 'all';
    },

    // –ü–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—É—Ä—Å—É
    showStatistics() {
        let totalLectures = 0;
        let totalLabs = 0;
        let totalPractices = 0;
        let totalLectureHours = 0;
        let totalPracticeHours = 0;

        MODULES_DATA.forEach(module => {
            totalLectures += module.lectures ? module.lectures.length : 0;
            totalLabs += module.labs ? module.labs.length : 0;
            totalPractices += module.practices ? module.practices.length : 0;
            totalLectureHours += module.hours.lectures;
            totalPracticeHours += module.hours.practice;
        });

        console.log('=== –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—É—Ä—Å—É ===');
        console.log(`–ú–æ–¥—É–ª—ñ–≤: ${MODULES_DATA.length}`);
        console.log(`–õ–µ–∫—Ü—ñ–π: ${totalLectures}`);
        console.log(`–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∏—Ö: ${totalLabs}`);
        console.log(`–ü—Ä–∞–∫—Ç–∏—á–Ω–∏—Ö: ${totalPractices}`);
        console.log(`–ì–æ–¥–∏–Ω –ª–µ–∫—Ü—ñ–π: ${totalLectureHours}`);
        console.log(`–ì–æ–¥–∏–Ω –ø—Ä–∞–∫—Ç–∏–∫–∏: ${totalPracticeHours}`);
        console.log(`–í—Å—å–æ–≥–æ –≥–æ–¥–∏–Ω: ${totalLectureHours + totalPracticeHours}`);
    }
};

// –ï–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∫–æ–Ω—Å–æ–ª—ñ (–¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è)
window.BankingIT = {
    modules: MODULES_DATA,
    utils: Utils,
    renderModules,
    openContent
};